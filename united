src/
â”‚â”€â”€ main.ts                  # Point dâ€™entrÃ©e, dÃ©marre NestJS
â”‚â”€â”€ app.module.ts            # Module principal qui importe tous les modules
â”‚
â”œâ”€â”€ auth/                    # Authentification JWT + rÃ´les
â”‚   â”‚â”€â”€ auth.module.ts
â”‚   â”‚â”€â”€ auth.controller.ts
â”‚   â”‚â”€â”€ auth.service.ts
â”‚   â”‚â”€â”€ jwt.strategy.ts
â”‚   â””â”€â”€ guards/jwt.guard.ts
â”‚   â””â”€â”€ dto/
â”‚        â”œâ”€â”€ login.dto.ts
â”‚        â””â”€â”€ register.dto.ts
â”‚
â”œâ”€â”€ users/                   # Gestion utilisateurs
â”‚   â”‚â”€â”€ users.module.ts
â”‚   â”‚â”€â”€ users.controller.ts
â”‚   â”‚â”€â”€ users.service.ts
â”‚   â””â”€â”€ dto/create-user.dto.ts
â”‚
â”œâ”€â”€ products/                # Gestion produits des Ã©leveurs
â”‚   â”‚â”€â”€ products.module.ts
â”‚   â”‚â”€â”€ products.controller.ts
â”‚   â”‚â”€â”€ products.service.ts
â”‚   â””â”€â”€ dto/create-product.dto.ts
â”‚
â”œâ”€â”€ orders/                  # Gestion commandes reÃ§ues par les Ã©leveurs
â”‚   â”‚â”€â”€ orders.module.ts
â”‚   â”‚â”€â”€ orders.controller.ts
â”‚   â”‚â”€â”€ orders.service.ts
â”‚   â””â”€â”€ dto/create-order.dto.ts
â”‚
â”œâ”€â”€ deliveries/              # Gestion livraisons
â”‚   â”‚â”€â”€ deliveries.module.ts
â”‚   â”‚â”€â”€ deliveries.controller.ts
â”‚   â”‚â”€â”€ deliveries.service.ts
â”‚   â””â”€â”€ dto/create-delivery.dto.ts
â”‚
â”œâ”€â”€ care/                    # Gestion soins vÃ©tÃ©rinaires
â”‚   â”‚â”€â”€ care.module.ts
â”‚   â”‚â”€â”€ care.controller.ts
â”‚   â”‚â”€â”€ care.service.ts
â”‚   â””â”€â”€ dto/create-care.dto.ts
â”‚
â”œâ”€â”€ appointments/            # Planning consultations vÃ©tÃ©rinaires
â”‚   â”‚â”€â”€ appointments.module.ts
â”‚   â”‚â”€â”€ appointments.controller.ts
â”‚   â”‚â”€â”€ appointments.service.ts
â”‚   â””â”€â”€ dto/create-appointment.dto.ts
â”‚
â”œâ”€â”€ prescriptions/           # Gestion ordonnances
â”‚   â”‚â”€â”€ prescriptions.module.ts
â”‚   â”‚â”€â”€ prescriptions.controller.ts
â”‚   â”‚â”€â”€ prescriptions.service.ts
â”‚   â””â”€â”€ dto/create-prescription.dto.ts
â”‚
â”œâ”€â”€ invoices/                # Gestion factures
â”‚   â”‚â”€â”€ invoices.module.ts
â”‚   â”‚â”€â”€ invoices.controller.ts
â”‚   â”‚â”€â”€ invoices.service.ts
â”‚   â””â”€â”€ dto/create-invoice.dto.ts
â”‚
â”œâ”€â”€ upload/                  # Upload fichiers (profil, produit)
â”‚   â”‚â”€â”€ upload.module.ts
â”‚   â”‚â”€â”€ upload.controller.ts
â”‚   â”‚â”€â”€ upload.service.ts
â”‚
â”œâ”€â”€ prisma/                  # Gestion de la base avec Prisma
â”‚   â”‚â”€â”€ prisma.module.ts      # Injection du client Prisma
â”‚   â”‚â”€â”€ prisma.service.ts     # Service central Prisma
â”‚   â””â”€â”€ schema.prisma         # ModÃ¨les et relations Prisma
â”‚
â”œâ”€â”€ common/                  # Code rÃ©utilisable
â”‚   â”œâ”€â”€ decorators/roles.decorator.ts  # DÃ©corateur @Roles()
â”‚   â”œâ”€â”€ guards/roles.guard.ts          # VÃ©rification rÃ´le
â”‚   â””â”€â”€ enums/
â”‚        â”œâ”€â”€ role.enum.ts              # Roles: ADMIN, ELEVEUR, LIVREUR, VETERINAIRE
â”‚        â”œâ”€â”€ delivery-status.enum.ts   # Livraisons : PENDING, IN_PROGRESS, DELIVERED
â”‚        â””â”€â”€ consultation-status.enum.ts # Consultations : SCHEDULED, IN_PROGRESS, COMPLETED
â”‚          # Secret et configuration JWT


// modÃ¨les

ðŸ”¹ Utilisateurs

User : id, name, email, password,numero, role

Relations :

1 livreur â†’ N livraisons (deliveries)

1 vÃ©tÃ©rinaire â†’ N soins (cares)

1 vÃ©tÃ©rinaire â†’ N ordonnances (prescriptions)

1 Ã©leveur â†’ N commandes reÃ§ues (ordersReceived)

1 Ã©leveur â†’ N produits (products)



ðŸ”¹ Produits

Product : id, name, price, description,ownerId

Relation : 1 produit â†’ N soins (cares)


ðŸ”¹ Commandes

Order : id,quantity,status, products[], receiverId (Ã©leveur)

Relation : 1 commande â†’ N Ã©leveur (receiver)


ðŸ”¹ Livraisons

Delivery : id, status, orderId, driverId (livreur)


ðŸ”¹ Soins

Care : id, date, productId, vetId


ðŸ”¹ Consultations

Appointment : id, date, status, vetId, userId (Ã©leveur)


ðŸ”¹ Ordonnances

Prescription : id, issuedAt, careId, vetId


ðŸ”¹ Factures

Invoice : id, issuedAt, orderId, userId (Ã©leveur)


Payment :

id,payerName,receiverName,receiverNumber,reason ,amount

